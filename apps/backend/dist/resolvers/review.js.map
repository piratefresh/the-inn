{"version":3,"sources":["../../src/resolvers/review.ts"],"sourcesContent":["import { FieldsValidationError } from \"@errors/FieldsValidationError\";\r\nimport { Review } from \"@models/Review\";\r\nimport { MyContext } from \"@typedefs/MyContext\";\r\nimport {\r\n  Arg,\r\n  createUnionType,\r\n  Ctx,\r\n  Field,\r\n  InputType,\r\n  Mutation,\r\n  Resolver,\r\n} from \"type-graphql\";\r\n\r\nexport const CreateReviewResult = createUnionType({\r\n  name: \"CreateReviewResult\",\r\n  types: () => [Review, FieldsValidationError] as const,\r\n});\r\n\r\n@InputType()\r\nexport class CreateReviewInput {\r\n  @Field()\r\n  rating: number;\r\n  @Field()\r\n  comment: string;\r\n  @Field()\r\n  userId: string;\r\n}\r\n\r\n@Resolver(Review)\r\nexport class ReviewResolver {\r\n  @Mutation((_type) => CreateReviewResult)\r\n  async createReview(\r\n    @Arg(\"createReviewInput\") createReviewInput: CreateReviewInput,\r\n    @Ctx() { prisma, res, req }: MyContext\r\n  ) {\r\n    try {\r\n      const createdReview = await prisma.review.create({\r\n        data: {\r\n          ...createReviewInput,\r\n        },\r\n        include: {\r\n          user: true,\r\n        },\r\n      });\r\n\r\n      return Object.assign(new Review(), createdReview);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n"],"names":["CreateReviewResult","createUnionType","name","types","Review","FieldsValidationError","CreateReviewInput","Field","rating","comment","userId","InputType","ReviewResolver","createReview","createReviewInput","prisma","res","req","createdReview","review","create","data","include","user","Object","assign","err","Mutation","_type","Arg","Ctx","Resolver"],"mappings":"AAAA;;;;;AAAsC,IAAA,sBAA+B,WAA/B,iCAA+B,CAAA;AAC9C,IAAA,OAAgB,WAAhB,kBAAgB,CAAA;AACb,IAAA,UAAqB,WAArB,uBAAqB,CAAA;AASxC,IAAA,YAAc,WAAd,cAAc,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEd,MAAMA,kBAAkB,GAAGC,CAAAA,GAAAA,YAAe,AAG/C,CAAA,gBAH+C,CAAC;IAChDC,IAAI,EAAE,oBAAoB;IAC1BC,KAAK,EAAE,IAAM;YAACC,OAAM,OAAA;YAAEC,sBAAqB,sBAAA;SAAC;CAC7C,CAAC,AAAC;QAHUL,kBAAkB,GAAlBA,kBAAkB;IAMlBM,iBAAiB,GAAvB,MAAMA,iBAAiB;CAO7B;QAPYA,iBAAiB,GAAjBA,iBAAiB;;IAC3BC,CAAAA,GAAAA,YAAK,AAAE,CAAA,MAAF,EAAE;;GADGD,iBAAiB,YAE5BE,QAAM;;IACLD,CAAAA,GAAAA,YAAK,AAAE,CAAA,MAAF,EAAE;;GAHGD,iBAAiB,YAI5BG,SAAO;;IACNF,CAAAA,GAAAA,YAAK,AAAE,CAAA,MAAF,EAAE;;GALGD,iBAAiB,YAM5BI,QAAM;4BANKJ,iBAAiB;IAD7BK,CAAAA,GAAAA,YAAS,AAAE,CAAA,UAAF,EAAE;GACCL,iBAAiB;IAUjBM,cAAc,GAApB,MAAMA,cAAc;IACzB,MACMC,YAAY,CAChB,AAA0BC,iBAAoC,EAC9D,AAAO,EAAEC,MAAM,CAAA,EAAEC,GAAG,CAAA,EAAEC,GAAG,CAAA,EAAa,EACtC;QACA,IAAI;YACF,MAAMC,aAAa,GAAG,MAAMH,MAAM,CAACI,MAAM,CAACC,MAAM,CAAC;gBAC/CC,IAAI,EAAE,kBACDP,iBAAiB,CACrB;gBACDQ,OAAO,EAAE;oBACPC,IAAI,EAAE,IAAI;iBACX;aACF,CAAC,AAAC;YAEH,OAAOC,MAAM,CAACC,MAAM,CAAC,IAAIrB,OAAM,OAAA,EAAE,EAAEc,aAAa,CAAC,CAAC;SACnD,CAAC,OAAOQ,GAAG,EAAE;YACZ,MAAMA,GAAG,CAAC;SACX;KACF;CACF;QArBYd,cAAc,GAAdA,cAAc;;IACxBe,CAAAA,GAAAA,YAAQ,AAA+B,CAAA,SAA/B,CAAC,CAACC,KAAK,GAAK5B,kBAAkB;IAAA,CAAC;eAErC6B,CAAAA,GAAAA,YAAG,AAAqB,CAAA,IAArB,CAAC,mBAAmB,CAAC;eACxBC,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;;;eADuC,iBAAiB,4BAAjB,iBAAiB;eACjC,UAAS,UAAA,4BAAT,UAAS,UAAA;;GAJ7BlB,cAAc,YAEnBC,cAAY;yBAFPD,cAAc;IAD1BmB,CAAAA,GAAAA,YAAQ,AAAQ,CAAA,SAAR,CAAC3B,OAAM,OAAA,CAAC;GACJQ,cAAc"}