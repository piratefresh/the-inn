{"version":3,"sources":["../../src/resolvers/campaign.ts"],"sourcesContent":["import {\r\n  Arg,\r\n  createUnionType,\r\n  Ctx,\r\n  Field,\r\n  InputType,\r\n  Int,\r\n  Mutation,\r\n  ObjectType,\r\n  Query,\r\n  Resolver,\r\n} from \"type-graphql\";\r\nimport { MyContext } from \"@typedefs/MyContext\";\r\nimport { FieldsValidationError } from \"@errors/FieldsValidationError\";\r\nimport { BadCredentialsError } from \"@errors/BadCredentialsError\";\r\nimport { Campaign } from \"@models/Campaign\";\r\nimport { NonExistingCampaignError } from \"@errors/NonExistingCampaignError\";\r\nimport { Experiance } from \"@typedefs/Experiance\";\r\nimport { Difficulty } from \"@typedefs/Difficulty\";\r\nimport { v2 as cloudinary } from \"cloudinary\";\r\nimport { User } from \"@prisma/client\";\r\n\r\ncloudinary.config({\r\n  api_key: process.env.CLOUDINARY_API_KEY,\r\n  api_secret: process.env.CLOUDINARY_API_SECRET,\r\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\r\n});\r\n\r\nexport const AuthResult = createUnionType({\r\n  name: \"AuthResult\",\r\n  types: () =>\r\n    [\r\n      Campaign,\r\n      FieldsValidationError,\r\n      NonExistingCampaignError,\r\n      BadCredentialsError,\r\n    ] as const,\r\n});\r\n\r\nexport const CreateCampaignResult = createUnionType({\r\n  name: \"CreateCampaignResult\",\r\n  types: () => [Campaign, FieldsValidationError] as const,\r\n});\r\n\r\n@InputType()\r\nexport class CreateCampaignInput {\r\n  @Field()\r\n  title: string;\r\n  @Field()\r\n  summary: string;\r\n  @Field()\r\n  image: string;\r\n  @Field()\r\n  isOnline: boolean;\r\n  @Field()\r\n  city: string;\r\n  @Field()\r\n  state: string;\r\n  @Field()\r\n  lat: number;\r\n  @Field()\r\n  lng: number;\r\n  @Field()\r\n  startDate: Date;\r\n  @Field()\r\n  endDate: Date;\r\n  @Field(() => [String])\r\n  days: string[];\r\n  @Field(() => [String])\r\n  time_periods: string[];\r\n  @Field()\r\n  game_system: string;\r\n  @Field()\r\n  max_seats: number;\r\n  @Field(() => Experiance)\r\n  experiance: Experiance;\r\n  @Field(() => Difficulty)\r\n  puzzles: Difficulty;\r\n  @Field(() => Difficulty)\r\n  combat: Difficulty;\r\n  @Field(() => Difficulty)\r\n  roleplay: Difficulty;\r\n  @Field(() => [String])\r\n  tags: string[];\r\n  @Field()\r\n  price: number;\r\n}\r\n\r\n@InputType()\r\nexport class AddPlayerCampaignInput {\r\n  @Field()\r\n  campaignId: string;\r\n  @Field(() => [String])\r\n  playerIds: string[];\r\n}\r\n\r\n@ObjectType()\r\nclass ImageSignature {\r\n  @Field((_type) => String)\r\n  signature!: string;\r\n\r\n  @Field((_type) => Int)\r\n  timestamp!: number;\r\n}\r\n\r\n@Resolver(Campaign)\r\nexport class CampaignResolver {\r\n  @Query(() => String)\r\n  async hellogame() {\r\n    return \"hello game\";\r\n  }\r\n  @Query(() => [Campaign])\r\n  async getCampaigns(@Ctx() { prisma, res }: MyContext) {\r\n    return prisma.campaign.findMany({});\r\n  }\r\n  @Query(() => Campaign)\r\n  async getCampaign(@Arg(\"id\") id: string, @Ctx() { prisma, res }: MyContext) {\r\n    return prisma.campaign.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      include: {\r\n        game_master: true,\r\n        players: {\r\n          select: {\r\n            user: true,\r\n            campaign: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  @Mutation((_type) => CreateCampaignResult)\r\n  async createCampaign(\r\n    @Arg(\"createCampaignInput\") createCampaignInput: CreateCampaignInput,\r\n    @Ctx() { prisma, res, req }: MyContext\r\n  ) {\r\n    try {\r\n      const campaign = await prisma.campaign.create({\r\n        data: {\r\n          ...createCampaignInput,\r\n          gmId: req.session.userId,\r\n        },\r\n      });\r\n\r\n      return Object.assign(new Campaign(), campaign);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n  @Mutation((_type) => CreateCampaignResult)\r\n  async addCampaignPlayer(\r\n    @Arg(\"AddPlayerCampaignInput\")\r\n    addPlayerCampaignInput: AddPlayerCampaignInput,\r\n    @Ctx() { prisma, res, req }: MyContext\r\n  ) {\r\n    try {\r\n      const players = await prisma.user.findMany({\r\n        where: {\r\n          id: { in: addPlayerCampaignInput.playerIds },\r\n        },\r\n      });\r\n\r\n      const playersArr = await players.map((player: User) => ({\r\n        userId: player.id,\r\n        campaignId: addPlayerCampaignInput.campaignId,\r\n      }));\r\n\r\n      const createdPlayers = await prisma.player.createMany({\r\n        data: playersArr,\r\n        skipDuplicates: true,\r\n      });\r\n      if (createdPlayers) {\r\n        const foundCampaign = await prisma.campaign.findUnique({\r\n          where: {\r\n            id: addPlayerCampaignInput.campaignId,\r\n          },\r\n          include: {\r\n            players: {\r\n              select: {\r\n                user: true,\r\n                campaign: true,\r\n              },\r\n            },\r\n            game_master: true,\r\n          },\r\n        });\r\n\r\n        console.log(\"foundCampaign: \", foundCampaign);\r\n\r\n        return Object.assign(new Campaign(), foundCampaign);\r\n      }\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n  @Mutation((_returns) => ImageSignature)\r\n  createImageSignature(): ImageSignature {\r\n    const timestamp = Math.round(new Date().getTime() / 1000);\r\n    const signature: string = cloudinary.utils.api_sign_request(\r\n      {\r\n        timestamp,\r\n        folder: \"The inn/campaignmedia\",\r\n      },\r\n      process.env.CLOUDINARY_API_SECRET as string\r\n    );\r\n    return { timestamp, signature };\r\n  }\r\n}\r\n"],"names":["cloudinary","config","api_key","process","env","CLOUDINARY_API_KEY","api_secret","CLOUDINARY_API_SECRET","cloud_name","CLOUDINARY_CLOUD_NAME","AuthResult","createUnionType","name","types","Campaign","FieldsValidationError","NonExistingCampaignError","BadCredentialsError","CreateCampaignResult","CreateCampaignInput","Field","title","summary","image","isOnline","city","state","lat","lng","startDate","endDate","String","days","time_periods","game_system","max_seats","Experiance","experiance","Difficulty","puzzles","combat","roleplay","tags","price","InputType","AddPlayerCampaignInput","campaignId","playerIds","ImageSignature","_type","signature","Int","timestamp","ObjectType","CampaignResolver","hellogame","getCampaigns","prisma","res","campaign","findMany","getCampaign","id","findUnique","where","include","game_master","players","select","user","createCampaign","createCampaignInput","req","create","data","gmId","session","userId","Object","assign","err","addCampaignPlayer","addPlayerCampaignInput","in","playersArr","map","player","createdPlayers","createMany","skipDuplicates","foundCampaign","console","log","createImageSignature","Math","round","Date","getTime","utils","api_sign_request","folder","Query","Ctx","Arg","Mutation","_returns","Resolver"],"mappings":"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"}