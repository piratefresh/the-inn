{"version":3,"sources":["../../src/resolvers/user.ts"],"sourcesContent":["import {\r\n  Arg,\r\n  createUnionType,\r\n  Ctx,\r\n  Field,\r\n  InputType,\r\n  Mutation,\r\n  Query,\r\n  Resolver,\r\n} from \"type-graphql\";\r\nimport argon2 from \"argon2\";\r\nimport { User } from \"@models/User\";\r\nimport { MyContext } from \"@typedefs/MyContext\";\r\nimport { plainToClass } from \"class-transformer\";\r\nimport { validate } from \"class-validator\";\r\nimport { setToken } from \"@utils/setToken\";\r\nimport { ExistingUserError } from \"@errors/ExisitingUserError\";\r\nimport { FieldsValidationError } from \"@errors/FieldsValidationError\";\r\nimport { BadCredentialsError } from \"@errors/BadCredentialsError\";\r\nimport { NonExistingUserError } from \"@errors/NonUserExists\";\r\nimport { PrismaClientKnownRequestError } from \"@prisma/client/runtime\";\r\n\r\nexport const AuthResult = createUnionType({\r\n  name: \"AuthResult\",\r\n  types: () =>\r\n    [\r\n      User,\r\n      FieldsValidationError,\r\n      NonExistingUserError,\r\n      BadCredentialsError,\r\n    ] as const,\r\n});\r\n\r\nexport const CreateUserResult = createUnionType({\r\n  name: \"CreateUserResult\",\r\n  types: () => [User, FieldsValidationError, ExistingUserError] as const,\r\n});\r\n\r\n@InputType()\r\nexport class UsernamePasswordInput {\r\n  @Field()\r\n  firstName: string;\r\n  @Field()\r\n  lastName: string;\r\n  @Field()\r\n  password: string;\r\n  @Field()\r\n  email: string;\r\n}\r\n\r\n@Resolver()\r\nexport class UserResolver {\r\n  @Query(() => String)\r\n  async helloworld() {\r\n    return \"hello world\";\r\n  }\r\n  @Query(() => [User])\r\n  async getUsers(@Ctx() { prisma, res }: MyContext) {\r\n    return prisma.user.findMany({});\r\n  }\r\n  @Query(() => [User])\r\n  async getUsersById(\r\n    @Arg(\"playerIds\", () => [String]) playerIds: string[],\r\n    @Ctx() { prisma, res }: MyContext\r\n  ) {\r\n    return prisma.user.findMany({\r\n      where: {\r\n        id: {\r\n          in: playerIds,\r\n        },\r\n      },\r\n    });\r\n  }\r\n  @Query(() => [User])\r\n  async getUser(@Ctx() { prisma, res }: MyContext) {\r\n    return prisma.user.findFirst({});\r\n  }\r\n\r\n  @Mutation((_type) => CreateUserResult)\r\n  async signup(\r\n    @Arg(\"options\") options: UsernamePasswordInput,\r\n    @Ctx() { prisma, res }: MyContext\r\n  ) {\r\n    const errors = await validate(options);\r\n    if (errors.length > 0) return FieldsValidationError.from(errors);\r\n    const hashedPassword = await argon2.hash(options.password);\r\n\r\n    try {\r\n      const createdUser = await prisma.user.create({\r\n        data: {\r\n          ...options,\r\n          experience: \"Beginner\",\r\n          password: hashedPassword,\r\n        },\r\n      });\r\n\r\n      await prisma.account.create({\r\n        data: {\r\n          userId: createdUser.id,\r\n          type: \"credentials\",\r\n          provider: \"Credentials\",\r\n          providerAccountId: createdUser.id,\r\n        },\r\n      });\r\n\r\n      setToken(createdUser, res);\r\n\r\n      console.log(\"user: \", createdUser);\r\n\r\n      return Object.assign(new User(), createdUser);\r\n    } catch (err) {\r\n      if (\r\n        err instanceof PrismaClientKnownRequestError &&\r\n        err.code === \"P2002\" // unique constraint failed\r\n      ) {\r\n        return new ExistingUserError();\r\n      } else {\r\n        throw err;\r\n      }\r\n    }\r\n  }\r\n  @Mutation((_type) => AuthResult)\r\n  async signin(\r\n    @Arg(\"usernameOrEmail\") usernameOrEmail: string,\r\n    @Arg(\"password\") password: string,\r\n    @Ctx() { prisma, res, req }: MyContext\r\n  ) {\r\n    // const inputUserEmailErrors = await validate(usernameOrEmail);\r\n    // if (inputUserEmailErrors.length > 0)\r\n    //   return FieldsValidationError.from(inputUserEmailErrors);\r\n    // const inputPassword = await validate(password);\r\n    // if (inputPassword.length > 0)\r\n    //   return FieldsValidationError.from(inputPassword);\r\n    const user = await prisma.user.findUnique({\r\n      where: {\r\n        email: usernameOrEmail,\r\n      },\r\n    });\r\n\r\n    if (!user) return new NonExistingUserError();\r\n\r\n    const authenticated = await argon2.verify(user.password, password);\r\n\r\n    if (!authenticated) return new BadCredentialsError();\r\n\r\n    setToken(user, res);\r\n\r\n    req.session.userId = user.id;\r\n\r\n    console.log(\"user: \", user);\r\n\r\n    return Object.assign(new User(), user);\r\n  }\r\n}\r\n"],"names":["AuthResult","createUnionType","name","types","User","FieldsValidationError","NonExistingUserError","BadCredentialsError","CreateUserResult","ExistingUserError","UsernamePasswordInput","Field","firstName","lastName","password","email","InputType","UserResolver","helloworld","getUsers","prisma","res","user","findMany","getUsersById","playerIds","where","id","in","getUser","findFirst","signup","options","errors","validate","length","from","hashedPassword","argon2","hash","createdUser","create","data","experience","account","userId","type","provider","providerAccountId","setToken","console","log","Object","assign","err","PrismaClientKnownRequestError","code","signin","usernameOrEmail","req","findUnique","authenticated","verify","session","Query","String","Ctx","Arg","Mutation","_type","Resolver"],"mappings":"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"}