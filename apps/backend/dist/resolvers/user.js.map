{"version":3,"sources":["../../src/resolvers/user.ts"],"sourcesContent":["import {\r\n  Arg,\r\n  Args,\r\n  ArgsType,\r\n  createUnionType,\r\n  Ctx,\r\n  Field,\r\n  InputType,\r\n  Int,\r\n  Mutation,\r\n  ObjectType,\r\n  Query,\r\n  Resolver,\r\n  Subscription,\r\n} from \"type-graphql\";\r\nimport argon2 from \"argon2\";\r\nimport { User } from \"@models/User\";\r\nimport { MyContext } from \"@typedefs/MyContext\";\r\nimport { validate } from \"class-validator\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { createRefreshToken, JWTPayload, setToken } from \"@utils/setToken\";\r\nimport { ExistingUserError } from \"@errors/ExisitingUserError\";\r\nimport { FieldsValidationError } from \"@errors/FieldsValidationError\";\r\nimport { BadCredentialsError } from \"@errors/BadCredentialsError\";\r\nimport { NonExistingUserError } from \"@errors/NonUserExists\";\r\nimport { PrismaClientKnownRequestError } from \"@prisma/client/runtime\";\r\nimport { issueToken, sendConfirmationEmail } from \"@utils/sendEmailUtils\";\r\nimport { findManyCursorConnection } from \"@devoxa/prisma-relay-cursor-connection\";\r\nimport { EdgeType, ConnectionType } from \"typegraphql-relay-connections\";\r\nimport { PageInfo } from \"@typedefs/relay/PageInfo\";\r\n\r\nexport const AuthResult = createUnionType({\r\n  name: \"AuthResult\",\r\n  types: () =>\r\n    [\r\n      User,\r\n      FieldsValidationError,\r\n      NonExistingUserError,\r\n      BadCredentialsError,\r\n    ] as const,\r\n});\r\n\r\nexport const CreateUserResult = createUnionType({\r\n  name: \"CreateUserResult\",\r\n  types: () => [User, FieldsValidationError, ExistingUserError] as const,\r\n});\r\n\r\n@ArgsType()\r\nexport class PaginationArgs {\r\n  @Field((type) => Int, { nullable: true })\r\n  skip?: number;\r\n  @Field({ nullable: true })\r\n  after?: string;\r\n  @Field({ nullable: true })\r\n  before?: string;\r\n  @Field((type) => Int, { nullable: true })\r\n  first?: number;\r\n  @Field((type) => Int, { nullable: true })\r\n  last?: number;\r\n}\r\n\r\n@InputType()\r\nexport class UpdateProfileArgs {\r\n  @Field({ nullable: true })\r\n  firstName?: string;\r\n  @Field({ nullable: true })\r\n  lastName?: string;\r\n  @Field({ nullable: true })\r\n  imageUrl?: string;\r\n  @Field({ nullable: true })\r\n  email?: string;\r\n  @Field({ nullable: true })\r\n  aboutMe?: string;\r\n  @Field({ nullable: true })\r\n  htmlAboutMe?: string;\r\n  @Field({ nullable: true })\r\n  playStyle?: string;\r\n  @Field({ nullable: true })\r\n  htmlPlayStyle?: string;\r\n  @Field({ nullable: true })\r\n  gmStyle?: string;\r\n  @Field({ nullable: true })\r\n  htmlGmStyle?: string;\r\n  @Field({ nullable: true })\r\n  facebook?: string;\r\n  @Field({ nullable: true })\r\n  discord?: string;\r\n  @Field({ nullable: true })\r\n  twitch?: string;\r\n  @Field({ nullable: true })\r\n  twitter?: string;\r\n  @Field({ nullable: true })\r\n  youtube?: string;\r\n  @Field(() => [String], { nullable: true })\r\n  tags: string[];\r\n}\r\n@InputType()\r\nexport class UpdatePasswordArgs {\r\n  @Field({ nullable: true })\r\n  oldPassword?: string;\r\n  @Field({ nullable: true })\r\n  newPassword?: string;\r\n}\r\n\r\n@InputType()\r\nexport class UsernamePasswordInput {\r\n  @Field()\r\n  firstName: string;\r\n  @Field()\r\n  lastName: string;\r\n  @Field()\r\n  password: string;\r\n  @Field()\r\n  email: string;\r\n}\r\n\r\n@ObjectType()\r\nexport class UserEdge extends EdgeType(User) {}\r\n\r\n@ObjectType()\r\nexport class UserConnection {\r\n  @Field((type) => [UserEdge])\r\n  edges: UserEdge[];\r\n  @Field((type) => PageInfo)\r\n  pageInfo: PageInfo;\r\n  @Field((type) => Int)\r\n  totalCount: number;\r\n}\r\n\r\n@Resolver()\r\nexport class UserResolver {\r\n  @Query(() => String)\r\n  async helloworld(@Ctx() { prisma, req, res, pusher }: MyContext) {\r\n    // @ts-ignore\r\n    pusher.trigger(\"my-channel\", \"my-event\", {\r\n      message: \"hello world\",\r\n    });\r\n\r\n    const userInfo = await prisma.user.findUnique({\r\n      where: {\r\n        id: req.session.userId,\r\n      },\r\n    });\r\n\r\n    // Replace this with code to retrieve the actual user id and info\r\n    const user = {\r\n      // @ts-ignore\r\n      id: req.session.userId,\r\n      user_info: {\r\n        ...userInfo,\r\n      },\r\n      watchlist: [\"another_id_1\", \"another_id_2\"],\r\n    };\r\n\r\n    const authResponse = pusher.authenticateUser(req.session.userId, user);\r\n\r\n    return `hello world ${authResponse}`;\r\n  }\r\n  @Query(() => String)\r\n  async me(@Ctx() { req }: MyContext) {\r\n    return req.session.userId;\r\n  }\r\n  @Query(() => UserConnection)\r\n  async getUsers(\r\n    @Ctx() { prisma }: MyContext,\r\n    @Args() { skip, after, before, first, last }: PaginationArgs\r\n  ) {\r\n    const result = await findManyCursorConnection(\r\n      (args) =>\r\n        prisma.user.findMany({\r\n          ...args,\r\n          include: {\r\n            hosted: true,\r\n            memberships: true,\r\n            reviews: true,\r\n          },\r\n        }),\r\n      () => prisma.user.count(),\r\n      { first, after }\r\n    );\r\n\r\n    return result;\r\n  }\r\n  @Query(() => [User])\r\n  async getOnlineUsers(\r\n    @Ctx() { prisma, pusher }: MyContext,\r\n    @Arg(\"username\") username: string,\r\n    @Arg(\"message\") message: string\r\n  ) {\r\n    pusher.trigger(\"presence-awesome\", \"message_sent\", {\r\n      username,\r\n      message,\r\n    });\r\n    return prisma.user.findMany({});\r\n  }\r\n  @Subscription(() => String, {\r\n    topics: \"MESSAGES\",\r\n  })\r\n  async subscription(@Ctx() ctx: any): Promise<any> {\r\n    return \"something\";\r\n  }\r\n  @Query(() => [User])\r\n  async getUsersById(\r\n    @Arg(\"playerIds\", () => [String]) playerIds: string[],\r\n    @Ctx() { prisma, res }: MyContext\r\n  ) {\r\n    return prisma.user.findMany({\r\n      where: {\r\n        id: {\r\n          in: playerIds,\r\n        },\r\n      },\r\n    });\r\n  }\r\n  @Query(() => User)\r\n  async getUser(@Arg(\"id\") id: string, @Ctx() { prisma, res }: MyContext) {\r\n    return prisma.user.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n    });\r\n  }\r\n\r\n  @Mutation((_type) => CreateUserResult)\r\n  async signup(\r\n    @Arg(\"options\") options: UsernamePasswordInput,\r\n    @Ctx() { prisma, res, req }: MyContext\r\n  ) {\r\n    const errors = await validate(options);\r\n    if (errors.length > 0) return FieldsValidationError.from(errors);\r\n    const hashedPassword = await argon2.hash(options.password);\r\n\r\n    try {\r\n      const user = await prisma.user.create({\r\n        data: {\r\n          ...options,\r\n          experience: \"Beginner\",\r\n          password: hashedPassword,\r\n        },\r\n      });\r\n\r\n      await prisma.account.create({\r\n        data: {\r\n          userId: user.id,\r\n          type: \"credentials\",\r\n          provider: \"Credentials\",\r\n          providerAccountId: user.id,\r\n        },\r\n      });\r\n\r\n      const token = await issueToken(user.id, prisma);\r\n\r\n      await sendConfirmationEmail(user.email, token);\r\n\r\n      setToken(user, res);\r\n\r\n      req.session.userId = user.id;\r\n\r\n      return Object.assign(new User(), user);\r\n    } catch (err) {\r\n      console.log(\"err: \", err);\r\n      if (\r\n        err instanceof PrismaClientKnownRequestError &&\r\n        err.code === \"P2002\" // unique constraint failed\r\n      ) {\r\n        return new ExistingUserError();\r\n      } else {\r\n        throw err;\r\n      }\r\n    }\r\n  }\r\n  @Mutation((_type) => AuthResult)\r\n  async signin(\r\n    @Arg(\"usernameOrEmail\") usernameOrEmail: string,\r\n    @Arg(\"password\") password: string,\r\n    @Ctx() { prisma, res, req }: MyContext\r\n  ) {\r\n    // const inputUserEmailErrors = await validate(usernameOrEmail);\r\n    // if (inputUserEmailErrors.length > 0)\r\n    //   return FieldsValidationError.from(inputUserEmailErrors);\r\n    // const inputPassword = await validate(password);\r\n    // if (inputPassword.length > 0)\r\n    //   return FieldsValidationError.from(inputPassword);\r\n    try {\r\n      const user = await prisma.user.findUnique({\r\n        where: {\r\n          email: usernameOrEmail,\r\n        },\r\n        include: {\r\n          accounts: true,\r\n        },\r\n      });\r\n\r\n      const refreshToken = createRefreshToken(user);\r\n      const decoded = jwt.verify(refreshToken, process.env.JWT_SECRET_KEY);\r\n\r\n      await prisma.account.upsert({\r\n        where: {\r\n          provider_providerAccountId_userId: {\r\n            userId: user.id,\r\n            provider: \"Credentials\",\r\n            providerAccountId: user.id,\r\n          },\r\n        },\r\n        create: {\r\n          userId: user.id,\r\n          type: \"credentials\",\r\n          provider: \"Credentials\",\r\n          providerAccountId: user.id,\r\n        },\r\n        update: {\r\n          refreshToken,\r\n          expiresAt: (decoded as JWTPayload).accessTokenExpires,\r\n        },\r\n      });\r\n\r\n      if (!user) return new NonExistingUserError();\r\n\r\n      const authenticated = await argon2.verify(user.password, password);\r\n\r\n      if (!authenticated) return new BadCredentialsError();\r\n\r\n      setToken(user, res);\r\n\r\n      req.session.userId = await user.id;\r\n\r\n      return Object.assign(new User(), user);\r\n    } catch (err) {\r\n      console.log(\"err: \", err);\r\n    }\r\n  }\r\n\r\n  @Mutation(() => Boolean)\r\n  signout(@Ctx() { req, res }: MyContext) {\r\n    return new Promise((resolve) =>\r\n      req.session.destroy((err) => {\r\n        res.clearCookie(process.env.JWT_COOKIE_NAME);\r\n        if (err) {\r\n          console.log(err);\r\n          resolve(false);\r\n          return;\r\n        }\r\n\r\n        resolve(true);\r\n      })\r\n    );\r\n  }\r\n\r\n  @Mutation(() => User)\r\n  async updateUserProfile(\r\n    @Arg(\"updateProfileArgs\", { nullable: true })\r\n    updateProfileArgs: UpdateProfileArgs,\r\n    @Ctx() { prisma, req }: MyContext\r\n  ) {\r\n    const userId = req.session.userId;\r\n\r\n    return await prisma.user.update({\r\n      where: {\r\n        id: userId,\r\n      },\r\n      data: {\r\n        ...updateProfileArgs,\r\n      },\r\n    });\r\n  }\r\n\r\n  @Mutation(() => User)\r\n  async updateUserPassword(\r\n    @Arg(\"updatePasswordArgs\", { nullable: true })\r\n    updatePasswordArgs: UpdatePasswordArgs,\r\n    @Ctx() { prisma, req }: MyContext\r\n  ) {\r\n    const userId = req.session.userId;\r\n\r\n    const user = await prisma.user.findUnique({\r\n      where: {\r\n        id: userId,\r\n      },\r\n    });\r\n\r\n    if (updatePasswordArgs.oldPassword) {\r\n      const verifyOldPassword = await argon2.verify(\r\n        user.password,\r\n        updatePasswordArgs.oldPassword\r\n      );\r\n      if (verifyOldPassword) {\r\n        return await prisma.user.update({\r\n          where: {\r\n            id: userId,\r\n          },\r\n          data: {\r\n            password: updatePasswordArgs.newPassword,\r\n          },\r\n        });\r\n      } else {\r\n        throw \"Old password is wrong\";\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":["AuthResult","createUnionType","name","types","User","FieldsValidationError","NonExistingUserError","BadCredentialsError","CreateUserResult","ExistingUserError","PaginationArgs","Field","type","Int","nullable","skip","after","before","first","last","ArgsType","UpdateProfileArgs","firstName","lastName","imageUrl","email","aboutMe","htmlAboutMe","playStyle","htmlPlayStyle","gmStyle","htmlGmStyle","facebook","discord","twitch","twitter","youtube","String","tags","InputType","UpdatePasswordArgs","oldPassword","newPassword","UsernamePasswordInput","password","UserEdge","EdgeType","ObjectType","UserConnection","edges","PageInfo","pageInfo","totalCount","UserResolver","helloworld","prisma","req","res","pusher","trigger","message","userInfo","user","findUnique","where","id","session","userId","user_info","watchlist","authResponse","authenticateUser","me","getUsers","result","findManyCursorConnection","args","findMany","include","hosted","memberships","reviews","count","getOnlineUsers","username","subscription","ctx","getUsersById","playerIds","in","getUser","signup","options","errors","validate","length","from","hashedPassword","argon2","hash","create","data","experience","account","provider","providerAccountId","token","issueToken","sendConfirmationEmail","setToken","Object","assign","err","console","log","PrismaClientKnownRequestError","code","signin","usernameOrEmail","accounts","refreshToken","createRefreshToken","decoded","jwt","verify","process","env","JWT_SECRET_KEY","upsert","provider_providerAccountId_userId","update","expiresAt","accessTokenExpires","authenticated","signout","Promise","resolve","destroy","clearCookie","JWT_COOKIE_NAME","updateUserProfile","updateProfileArgs","updateUserPassword","updatePasswordArgs","verifyOldPassword","Query","Ctx","Args","Arg","Subscription","topics","Mutation","_type","Boolean","Resolver"],"mappings":"AAAA;;;;;AAcO,IAAA,YAAc,WAAd,cAAc,CAAA;AACF,IAAA,OAAQ,kCAAR,QAAQ,EAAA;AACN,IAAA,KAAc,WAAd,gBAAc,CAAA;AACT,IAAA,UAAqB,WAArB,uBAAqB,CAAA;AACtB,IAAA,eAAiB,WAAjB,iBAAiB,CAAA;AAC1B,IAAA,aAAc,kCAAd,cAAc,EAAA;AAC2B,IAAA,SAAiB,WAAjB,mBAAiB,CAAA;AACxC,IAAA,mBAA4B,WAA5B,8BAA4B,CAAA;AACxB,IAAA,sBAA+B,WAA/B,iCAA+B,CAAA;AACjC,IAAA,oBAA6B,WAA7B,+BAA6B,CAAA;AAC5B,IAAA,cAAuB,WAAvB,yBAAuB,CAAA;AACd,IAAA,QAAwB,WAAxB,wBAAwB,CAAA;AACpB,IAAA,eAAuB,WAAvB,yBAAuB,CAAA;AAChC,IAAA,4BAAwC,WAAxC,wCAAwC,CAAA;AACxC,IAAA,4BAA+B,WAA/B,+BAA+B,CAAA;AAC/C,IAAA,SAA0B,WAA1B,4BAA0B,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE5C,MAAMA,UAAU,GAAGC,CAAAA,GAAAA,YAAe,AASvC,CAAA,gBATuC,CAAC;IACxCC,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE,IACL;YACEC,KAAI,KAAA;YACJC,sBAAqB,sBAAA;YACrBC,cAAoB,qBAAA;YACpBC,oBAAmB,oBAAA;SACpB;CACJ,CAAC,AAAC;QATUP,UAAU,GAAVA,UAAU;AAWhB,MAAMQ,gBAAgB,GAAGP,CAAAA,GAAAA,YAAe,AAG7C,CAAA,gBAH6C,CAAC;IAC9CC,IAAI,EAAE,kBAAkB;IACxBC,KAAK,EAAE,IAAM;YAACC,KAAI,KAAA;YAAEC,sBAAqB,sBAAA;YAAEI,mBAAiB,kBAAA;SAAC;CAC9D,CAAC,AAAC;QAHUD,gBAAgB,GAAhBA,gBAAgB;IAMhBE,cAAc,GAApB,MAAMA,cAAc;CAW1B;QAXYA,cAAc,GAAdA,cAAc;;IACxBC,CAAAA,GAAAA,YAAK,AAAmC,CAAA,MAAnC,CAAC,CAACC,IAAI,GAAKC,YAAG,IAAA;IAAA,EAAE;QAAEC,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAD9BJ,cAAc,YAEzBK,MAAI;;IACHJ,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAHfJ,cAAc,YAIzBM,OAAK;;IACJL,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GALfJ,cAAc,YAMzBO,QAAM;;IACLN,CAAAA,GAAAA,YAAK,AAAmC,CAAA,MAAnC,CAAC,CAACC,IAAI,GAAKC,YAAG,IAAA;IAAA,EAAE;QAAEC,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAP9BJ,cAAc,YAQzBQ,OAAK;;IACJP,CAAAA,GAAAA,YAAK,AAAmC,CAAA,MAAnC,CAAC,CAACC,IAAI,GAAKC,YAAG,IAAA;IAAA,EAAE;QAAEC,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAT9BJ,cAAc,YAUzBS,MAAI;yBAVOT,cAAc;IAD1BU,CAAAA,GAAAA,YAAQ,AAAE,CAAA,SAAF,EAAE;GACEV,cAAc;IAcdW,iBAAiB,GAAvB,MAAMA,iBAAiB;CAiC7B;QAjCYA,iBAAiB,GAAjBA,iBAAiB;;IAC3BV,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GADfO,iBAAiB,YAE5BC,WAAS;;IACRX,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAHfO,iBAAiB,YAI5BE,UAAQ;;IACPZ,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GALfO,iBAAiB,YAM5BG,UAAQ;;IACPb,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAPfO,iBAAiB,YAQ5BI,OAAK;;IACJd,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GATfO,iBAAiB,YAU5BK,SAAO;;IACNf,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAXfO,iBAAiB,YAY5BM,aAAW;;IACVhB,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAbfO,iBAAiB,YAc5BO,WAAS;;IACRjB,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAffO,iBAAiB,YAgB5BQ,eAAa;;IACZlB,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAjBfO,iBAAiB,YAkB5BS,SAAO;;IACNnB,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAnBfO,iBAAiB,YAoB5BU,aAAW;;IACVpB,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GArBfO,iBAAiB,YAsB5BW,UAAQ;;IACPrB,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAvBfO,iBAAiB,YAwB5BY,SAAO;;IACNtB,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAzBfO,iBAAiB,YA0B5Ba,QAAM;;IACLvB,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GA3BfO,iBAAiB,YA4B5Bc,SAAO;;IACNxB,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GA7BfO,iBAAiB,YA8B5Be,SAAO;;IACNzB,CAAAA,GAAAA,YAAK,AAAoC,CAAA,MAApC,CAAC,IAAM;YAAC0B,MAAM;SAAC;IAAA,EAAE;QAAEvB,QAAQ,EAAE,IAAI;KAAE,CAAC;;GA/B/BO,iBAAiB,YAgC5BiB,MAAI;4BAhCOjB,iBAAiB;IAD7BkB,CAAAA,GAAAA,YAAS,AAAE,CAAA,UAAF,EAAE;GACClB,iBAAiB;IAmCjBmB,kBAAkB,GAAxB,MAAMA,kBAAkB;CAK9B;QALYA,kBAAkB,GAAlBA,kBAAkB;;IAC5B7B,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GADf0B,kBAAkB,YAE7BC,aAAW;;IACV9B,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC;QAAEG,QAAQ,EAAE,IAAI;KAAE,CAAC;;GAHf0B,kBAAkB,YAI7BE,aAAW;6BAJAF,kBAAkB;IAD9BD,CAAAA,GAAAA,YAAS,AAAE,CAAA,UAAF,EAAE;GACCC,kBAAkB;IAQlBG,qBAAqB,GAA3B,MAAMA,qBAAqB;CASjC;QATYA,qBAAqB,GAArBA,qBAAqB;;IAC/BhC,CAAAA,GAAAA,YAAK,AAAE,CAAA,MAAF,EAAE;;GADGgC,qBAAqB,YAEhCrB,WAAS;;IACRX,CAAAA,GAAAA,YAAK,AAAE,CAAA,MAAF,EAAE;;GAHGgC,qBAAqB,YAIhCpB,UAAQ;;IACPZ,CAAAA,GAAAA,YAAK,AAAE,CAAA,MAAF,EAAE;;GALGgC,qBAAqB,YAMhCC,UAAQ;;IACPjC,CAAAA,GAAAA,YAAK,AAAE,CAAA,MAAF,EAAE;;GAPGgC,qBAAqB,YAQhClB,OAAK;gCARMkB,qBAAqB;IADjCJ,CAAAA,GAAAA,YAAS,AAAE,CAAA,UAAF,EAAE;GACCI,qBAAqB;IAYrBE,QAAQ,GAAd,MAAMA,QAAQ,SAASC,CAAAA,GAAAA,4BAAQ,AAAM,CAAA,SAAN,CAAC1C,KAAI,KAAA,CAAC;CAAG;QAAlCyC,QAAQ,GAARA,QAAQ;mBAARA,QAAQ;IADpBE,CAAAA,GAAAA,YAAU,AAAE,CAAA,WAAF,EAAE;GACAF,QAAQ;IAGRG,cAAc,GAApB,MAAMA,cAAc;CAO1B;QAPYA,cAAc,GAAdA,cAAc;;IACxBrC,CAAAA,GAAAA,YAAK,AAAsB,CAAA,MAAtB,CAAC,CAACC,IAAI,GAAK;YAACiC,QAAQ;SAAC;IAAA,CAAC;;GADjBG,cAAc,YAEzBC,OAAK;;IACJtC,CAAAA,GAAAA,YAAK,AAAoB,CAAA,MAApB,CAAC,CAACC,IAAI,GAAKsC,SAAQ,SAAA;IAAA,CAAC;qCAChB,SAAQ,SAAA,4BAAR,SAAQ,SAAA;GAJPF,cAAc,YAIzBG,UAAQ;;IACPxC,CAAAA,GAAAA,YAAK,AAAe,CAAA,MAAf,CAAC,CAACC,IAAI,GAAKC,YAAG,IAAA;IAAA,CAAC;;GALVmC,cAAc,YAMzBI,YAAU;yBANCJ,cAAc;IAD1BD,CAAAA,GAAAA,YAAU,AAAE,CAAA,WAAF,EAAE;GACAC,cAAc;IAUdK,YAAY,GAAlB,MAAMA,YAAY;IACvB,MACMC,UAAU,CAAC,AAAO,EAAEC,MAAM,CAAA,EAAEC,GAAG,CAAA,EAAEC,GAAG,CAAA,EAAEC,MAAM,CAAA,EAAa,EAAE;QAE/DA,MAAM,CAACC,OAAO,CAAC,YAAY,EAAE,UAAU,EAAE;YACvCC,OAAO,EAAE,aAAa;SACvB,CAAC,CAAC;QAEH,MAAMC,QAAQ,GAAG,MAAMN,MAAM,CAACO,IAAI,CAACC,UAAU,CAAC;YAC5CC,KAAK,EAAE;gBACLC,EAAE,EAAET,GAAG,CAACU,OAAO,CAACC,MAAM;aACvB;SACF,CAAC,AAAC;QAGH,MAAML,IAAI,GAAG;YAEXG,EAAE,EAAET,GAAG,CAACU,OAAO,CAACC,MAAM;YACtBC,SAAS,EAAE,kBACNP,QAAQ,CACZ;YACDQ,SAAS,EAAE;gBAAC,cAAc;gBAAE,cAAc;aAAC;SAC5C,AAAC;QAEF,MAAMC,YAAY,GAAGZ,MAAM,CAACa,gBAAgB,CAACf,GAAG,CAACU,OAAO,CAACC,MAAM,EAAEL,IAAI,CAAC,AAAC;QAEvE,OAAO,CAAC,YAAY,EAAEQ,YAAY,CAAC,CAAC,CAAC;KACtC;IACD,MACME,EAAE,CAAC,AAAO,EAAEhB,GAAG,CAAA,EAAa,EAAE;QAClC,OAAOA,GAAG,CAACU,OAAO,CAACC,MAAM,CAAC;KAC3B;IACD,MACMM,QAAQ,CACZ,AAAO,EAAElB,MAAM,CAAA,EAAa,EAC5B,AAAQ,EAAExC,IAAI,CAAA,EAAEC,KAAK,CAAA,EAAEC,MAAM,CAAA,EAAEC,KAAK,CAAA,EAAEC,IAAI,CAAA,EAAkB,EAC5D;QACA,MAAMuD,MAAM,GAAG,MAAMC,CAAAA,GAAAA,4BAAwB,AAY5C,CAAA,yBAZ4C,CAC3C,CAACC,IAAI,GACHrB,MAAM,CAACO,IAAI,CAACe,QAAQ,CAAC,kBAChBD,IAAI;gBACPE,OAAO,EAAE;oBACPC,MAAM,EAAE,IAAI;oBACZC,WAAW,EAAE,IAAI;oBACjBC,OAAO,EAAE,IAAI;iBACd;cACF,CAAC;QAAA,EACJ,IAAM1B,MAAM,CAACO,IAAI,CAACoB,KAAK,EAAE;QAAA,EACzB;YAAEhE,KAAK;YAAEF,KAAK;SAAE,CACjB,AAAC;QAEF,OAAO0D,MAAM,CAAC;KACf;IACD,MACMS,cAAc,CAClB,AAAO,EAAE5B,MAAM,CAAA,EAAEG,MAAM,CAAA,EAAa,EACpC,AAAiB0B,QAAgB,EACjC,AAAgBxB,OAAe,EAC/B;QACAF,MAAM,CAACC,OAAO,CAAC,kBAAkB,EAAE,cAAc,EAAE;YACjDyB,QAAQ;YACRxB,OAAO;SACR,CAAC,CAAC;QACH,OAAOL,MAAM,CAACO,IAAI,CAACe,QAAQ,CAAC,EAAE,CAAC,CAAC;KACjC;IACD,MAGMQ,YAAY,CAAC,AAAOC,GAAQ,EAAgB;QAChD,OAAO,WAAW,CAAC;KACpB;IACD,MACMC,YAAY,CAChB,AAAkCC,SAAmB,EACrD,AAAO,EAAEjC,MAAM,CAAA,EAAEE,GAAG,CAAA,EAAa,EACjC;QACA,OAAOF,MAAM,CAACO,IAAI,CAACe,QAAQ,CAAC;YAC1Bb,KAAK,EAAE;gBACLC,EAAE,EAAE;oBACFwB,EAAE,EAAED,SAAS;iBACd;aACF;SACF,CAAC,CAAC;KACJ;IACD,MACME,OAAO,CAAC,AAAWzB,EAAU,EAAE,AAAO,EAAEV,MAAM,CAAA,EAAEE,GAAG,CAAA,EAAa,EAAE;QACtE,OAAOF,MAAM,CAACO,IAAI,CAACC,UAAU,CAAC;YAC5BC,KAAK,EAAE;gBACLC,EAAE;aACH;SACF,CAAC,CAAC;KACJ;IAED,MACM0B,MAAM,CACV,AAAgBC,OAA8B,EAC9C,AAAO,EAAErC,MAAM,CAAA,EAAEE,GAAG,CAAA,EAAED,GAAG,CAAA,EAAa,EACtC;QACA,MAAMqC,MAAM,GAAG,MAAMC,CAAAA,GAAAA,eAAQ,AAAS,CAAA,SAAT,CAACF,OAAO,CAAC,AAAC;QACvC,IAAIC,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE,OAAO1F,sBAAqB,sBAAA,CAAC2F,IAAI,CAACH,MAAM,CAAC,CAAC;QACjE,MAAMI,cAAc,GAAG,MAAMC,OAAM,QAAA,CAACC,IAAI,CAACP,OAAO,CAAChD,QAAQ,CAAC,AAAC;QAE3D,IAAI;YACF,MAAMkB,IAAI,GAAG,MAAMP,MAAM,CAACO,IAAI,CAACsC,MAAM,CAAC;gBACpCC,IAAI,EAAE,kBACDT,OAAO;oBACVU,UAAU,EAAE,UAAU;oBACtB1D,QAAQ,EAAEqD,cAAc;kBACzB;aACF,CAAC,AAAC;YAEH,MAAM1C,MAAM,CAACgD,OAAO,CAACH,MAAM,CAAC;gBAC1BC,IAAI,EAAE;oBACJlC,MAAM,EAAEL,IAAI,CAACG,EAAE;oBACfrD,IAAI,EAAE,aAAa;oBACnB4F,QAAQ,EAAE,aAAa;oBACvBC,iBAAiB,EAAE3C,IAAI,CAACG,EAAE;iBAC3B;aACF,CAAC,CAAC;YAEH,MAAMyC,KAAK,GAAG,MAAMC,CAAAA,GAAAA,eAAU,AAAiB,CAAA,WAAjB,CAAC7C,IAAI,CAACG,EAAE,EAAEV,MAAM,CAAC,AAAC;YAEhD,MAAMqD,CAAAA,GAAAA,eAAqB,AAAmB,CAAA,sBAAnB,CAAC9C,IAAI,CAACrC,KAAK,EAAEiF,KAAK,CAAC,CAAC;YAE/CG,CAAAA,GAAAA,SAAQ,AAAW,CAAA,SAAX,CAAC/C,IAAI,EAAEL,GAAG,CAAC,CAAC;YAEpBD,GAAG,CAACU,OAAO,CAACC,MAAM,GAAGL,IAAI,CAACG,EAAE,CAAC;YAE7B,OAAO6C,MAAM,CAACC,MAAM,CAAC,IAAI3G,KAAI,KAAA,EAAE,EAAE0D,IAAI,CAAC,CAAC;SACxC,CAAC,OAAOkD,GAAG,EAAE;YACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC,CAAC;YAC1B,IACEA,GAAG,YAAYG,QAA6B,8BAAA,IAC5CH,GAAG,CAACI,IAAI,KAAK,OAAO,EACpB;gBACA,OAAO,IAAI3G,mBAAiB,kBAAA,EAAE,CAAC;aAChC,MAAM;gBACL,MAAMuG,GAAG,CAAC;aACX;SACF;KACF;IACD,MACMK,MAAM,CACV,AAAwBC,eAAuB,EAC/C,AAAiB1E,QAAgB,EACjC,AAAO,EAAEW,MAAM,CAAA,EAAEE,GAAG,CAAA,EAAED,GAAG,CAAA,EAAa,EACtC;QAOA,IAAI;YACF,MAAMM,IAAI,GAAG,MAAMP,MAAM,CAACO,IAAI,CAACC,UAAU,CAAC;gBACxCC,KAAK,EAAE;oBACLvC,KAAK,EAAE6F,eAAe;iBACvB;gBACDxC,OAAO,EAAE;oBACPyC,QAAQ,EAAE,IAAI;iBACf;aACF,CAAC,AAAC;YAEH,MAAMC,YAAY,GAAGC,CAAAA,GAAAA,SAAkB,AAAM,CAAA,mBAAN,CAAC3D,IAAI,CAAC,AAAC;YAC9C,MAAM4D,OAAO,GAAGC,aAAG,QAAA,CAACC,MAAM,CAACJ,YAAY,EAAEK,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC,AAAC;YAErE,MAAMxE,MAAM,CAACgD,OAAO,CAACyB,MAAM,CAAC;gBAC1BhE,KAAK,EAAE;oBACLiE,iCAAiC,EAAE;wBACjC9D,MAAM,EAAEL,IAAI,CAACG,EAAE;wBACfuC,QAAQ,EAAE,aAAa;wBACvBC,iBAAiB,EAAE3C,IAAI,CAACG,EAAE;qBAC3B;iBACF;gBACDmC,MAAM,EAAE;oBACNjC,MAAM,EAAEL,IAAI,CAACG,EAAE;oBACfrD,IAAI,EAAE,aAAa;oBACnB4F,QAAQ,EAAE,aAAa;oBACvBC,iBAAiB,EAAE3C,IAAI,CAACG,EAAE;iBAC3B;gBACDiE,MAAM,EAAE;oBACNV,YAAY;oBACZW,SAAS,EAAE,AAACT,OAAO,CAAgBU,kBAAkB;iBACtD;aACF,CAAC,CAAC;YAEH,IAAI,CAACtE,IAAI,EAAE,OAAO,IAAIxD,cAAoB,qBAAA,EAAE,CAAC;YAE7C,MAAM+H,aAAa,GAAG,MAAMnC,OAAM,QAAA,CAAC0B,MAAM,CAAC9D,IAAI,CAAClB,QAAQ,EAAEA,QAAQ,CAAC,AAAC;YAEnE,IAAI,CAACyF,aAAa,EAAE,OAAO,IAAI9H,oBAAmB,oBAAA,EAAE,CAAC;YAErDsG,CAAAA,GAAAA,SAAQ,AAAW,CAAA,SAAX,CAAC/C,IAAI,EAAEL,GAAG,CAAC,CAAC;YAEpBD,GAAG,CAACU,OAAO,CAACC,MAAM,GAAG,MAAML,IAAI,CAACG,EAAE,CAAC;YAEnC,OAAO6C,MAAM,CAACC,MAAM,CAAC,IAAI3G,KAAI,KAAA,EAAE,EAAE0D,IAAI,CAAC,CAAC;SACxC,CAAC,OAAOkD,GAAG,EAAE;YACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC,CAAC;SAC3B;KACF;IAED,AACAsB,OAAO,CAAC,AAAO,EAAE9E,GAAG,CAAA,EAAEC,GAAG,CAAA,EAAa,EAAE;QACtC,OAAO,IAAI8E,OAAO,CAAC,CAACC,OAAO,GACzBhF,GAAG,CAACU,OAAO,CAACuE,OAAO,CAAC,CAACzB,GAAG,GAAK;gBAC3BvD,GAAG,CAACiF,WAAW,CAACb,OAAO,CAACC,GAAG,CAACa,eAAe,CAAC,CAAC;gBAC7C,IAAI3B,GAAG,EAAE;oBACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;oBACjBwB,OAAO,CAAC,KAAK,CAAC,CAAC;oBACf,OAAO;iBACR;gBAEDA,OAAO,CAAC,IAAI,CAAC,CAAC;aACf,CAAC;QAAA,CACH,CAAC;KACH;IAED,MACMI,iBAAiB,CACrB,AACAC,iBAAoC,EACpC,AAAO,EAAEtF,MAAM,CAAA,EAAEC,GAAG,CAAA,EAAa,EACjC;QACA,MAAMW,MAAM,GAAGX,GAAG,CAACU,OAAO,CAACC,MAAM,AAAC;QAElC,OAAO,MAAMZ,MAAM,CAACO,IAAI,CAACoE,MAAM,CAAC;YAC9BlE,KAAK,EAAE;gBACLC,EAAE,EAAEE,MAAM;aACX;YACDkC,IAAI,EAAE,kBACDwC,iBAAiB,CACrB;SACF,CAAC,CAAC;KACJ;IAED,MACMC,kBAAkB,CACtB,AACAC,kBAAsC,EACtC,AAAO,EAAExF,MAAM,CAAA,EAAEC,GAAG,CAAA,EAAa,EACjC;QACA,MAAMW,MAAM,GAAGX,GAAG,CAACU,OAAO,CAACC,MAAM,AAAC;QAElC,MAAML,IAAI,GAAG,MAAMP,MAAM,CAACO,IAAI,CAACC,UAAU,CAAC;YACxCC,KAAK,EAAE;gBACLC,EAAE,EAAEE,MAAM;aACX;SACF,CAAC,AAAC;QAEH,IAAI4E,kBAAkB,CAACtG,WAAW,EAAE;YAClC,MAAMuG,iBAAiB,GAAG,MAAM9C,OAAM,QAAA,CAAC0B,MAAM,CAC3C9D,IAAI,CAAClB,QAAQ,EACbmG,kBAAkB,CAACtG,WAAW,CAC/B,AAAC;YACF,IAAIuG,iBAAiB,EAAE;gBACrB,OAAO,MAAMzF,MAAM,CAACO,IAAI,CAACoE,MAAM,CAAC;oBAC9BlE,KAAK,EAAE;wBACLC,EAAE,EAAEE,MAAM;qBACX;oBACDkC,IAAI,EAAE;wBACJzD,QAAQ,EAAEmG,kBAAkB,CAACrG,WAAW;qBACzC;iBACF,CAAC,CAAC;aACJ,MAAM;gBACL,MAAM,uBAAuB,CAAC;aAC/B;SACF;KACF;CACF;QA7QYW,YAAY,GAAZA,YAAY;;IACtB4F,CAAAA,GAAAA,YAAK,AAAc,CAAA,MAAd,CAAC,IAAM5G,MAAM;IAAA,CAAC;eACF6G,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;;;eAA+B,UAAS,UAAA,4BAAT,UAAS,UAAA;;GAFpD7F,YAAY,YAEjBC,YAAU;;IA0Bf2F,CAAAA,GAAAA,YAAK,AAAc,CAAA,MAAd,CAAC,IAAM5G,MAAM;IAAA,CAAC;eACV6G,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;;;eAAU,UAAS,UAAA,4BAAT,UAAS,UAAA;;GA7BvB7F,YAAY,YA6BjBmB,IAAE;;IAGPyE,CAAAA,GAAAA,YAAK,AAAsB,CAAA,MAAtB,CAAC,IAAMjG,cAAc;IAAA,CAAC;eAEzBkG,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;eACLC,CAAAA,GAAAA,YAAI,AAAE,CAAA,KAAF,EAAE;;;eADY,UAAS,UAAA,4BAAT,UAAS,UAAA;eACkB,cAAc,4BAAd,cAAc;;GAnCnD9F,YAAY,YAiCjBoB,UAAQ;;IAoBbwE,CAAAA,GAAAA,YAAK,AAAc,CAAA,MAAd,CAAC,IAAM;YAAC7I,KAAI,KAAA;SAAC;IAAA,CAAC;eAEjB8I,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;eACLE,CAAAA,GAAAA,YAAG,AAAY,CAAA,IAAZ,CAAC,UAAU,CAAC;eACfA,CAAAA,GAAAA,YAAG,AAAW,CAAA,IAAX,CAAC,SAAS,CAAC;;;eAFY,UAAS,UAAA,4BAAT,UAAS,UAAA;;;;GAvD3B/F,YAAY,YAsDjB8B,gBAAc;;IAWnBkE,CAAAA,GAAAA,YAAY,AAEX,CAAA,aAFW,CAAC,IAAMhH,MAAM;IAAA,EAAE;QAC1BiH,MAAM,EAAE,UAAU;KACnB,CAAC;eACkBJ,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;;;;;GApEd7F,YAAY,YAoEjBgC,cAAY;;IAGjB4D,CAAAA,GAAAA,YAAK,AAAc,CAAA,MAAd,CAAC,IAAM;YAAC7I,KAAI,KAAA;SAAC;IAAA,CAAC;eAEjBgJ,CAAAA,GAAAA,YAAG,AAA6B,CAAA,IAA7B,CAAC,WAAW,EAAE,IAAM;YAAC/G,MAAM;SAAC;IAAA,CAAC;eAChC6G,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;;;;eAAkB,UAAS,UAAA,4BAAT,UAAS,UAAA;;GA1ExB7F,YAAY,YAwEjBkC,cAAY;;IAYjB0D,CAAAA,GAAAA,YAAK,AAAY,CAAA,MAAZ,CAAC,IAAM7I,KAAI,KAAA;IAAA,CAAC;eACHgJ,CAAAA,GAAAA,YAAG,AAAM,CAAA,IAAN,CAAC,IAAI,CAAC;eAAcF,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;;;;eAAkB,UAAS,UAAA,4BAAT,UAAS,UAAA;;GArF3D7F,YAAY,YAqFjBqC,SAAO;;IAQZ6D,CAAAA,GAAAA,YAAQ,AAA6B,CAAA,SAA7B,CAAC,CAACC,KAAK,GAAKhJ,gBAAgB;IAAA,CAAC;eAEnC4I,CAAAA,GAAAA,YAAG,AAAW,CAAA,IAAX,CAAC,SAAS,CAAC;eACdF,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;;;eADmB,qBAAqB,4BAArB,qBAAqB;eACjB,UAAS,UAAA,4BAAT,UAAS,UAAA;;GAhG7B7F,YAAY,YA8FjBsC,QAAM;;IA+CX4D,CAAAA,GAAAA,YAAQ,AAAuB,CAAA,SAAvB,CAAC,CAACC,KAAK,GAAKxJ,UAAU;IAAA,CAAC;eAE7BoJ,CAAAA,GAAAA,YAAG,AAAmB,CAAA,IAAnB,CAAC,iBAAiB,CAAC;eACtBA,CAAAA,GAAAA,YAAG,AAAY,CAAA,IAAZ,CAAC,UAAU,CAAC;eACfF,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;;;;;eAAuB,UAAS,UAAA,4BAAT,UAAS,UAAA;;GAjJ7B7F,YAAY,YA8IjBgE,QAAM;;IA4DXkC,CAAAA,GAAAA,YAAQ,AAAe,CAAA,SAAf,CAAC,IAAME,OAAO;IAAA,CAAC;eACfP,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;;;eAAe,UAAS,UAAA,4BAAT,UAAS,UAAA;;GA3M3B7F,YAAY,YA2MvBiF,SAAO;;IAeNiB,CAAAA,GAAAA,YAAQ,AAAY,CAAA,SAAZ,CAAC,IAAMnJ,KAAI,KAAA;IAAA,CAAC;eAElBgJ,CAAAA,GAAAA,YAAG,AAAyC,CAAA,IAAzC,CAAC,mBAAmB,EAAE;QAAEtI,QAAQ,EAAE,IAAI;KAAE,CAAC;eAE5CoI,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;;;eADa,iBAAiB,4BAAjB,iBAAiB;eACZ,UAAS,UAAA,4BAAT,UAAS,UAAA;;GA9NxB7F,YAAY,YA2NjBuF,mBAAiB;;IAiBtBW,CAAAA,GAAAA,YAAQ,AAAY,CAAA,SAAZ,CAAC,IAAMnJ,KAAI,KAAA;IAAA,CAAC;eAElBgJ,CAAAA,GAAAA,YAAG,AAA0C,CAAA,IAA1C,CAAC,oBAAoB,EAAE;QAAEtI,QAAQ,EAAE,IAAI;KAAE,CAAC;eAE7CoI,CAAAA,GAAAA,YAAG,AAAE,CAAA,IAAF,EAAE;;;eADc,kBAAkB,4BAAlB,kBAAkB;eACd,UAAS,UAAA,4BAAT,UAAS,UAAA;;GAhPxB7F,YAAY,YA6OjByF,oBAAkB;uBA7ObzF,YAAY;IADxBqG,CAAAA,GAAAA,YAAQ,AAAE,CAAA,SAAF,EAAE;GACErG,YAAY"}